/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package co.tecnomati.java.controlcaja.vista;

import co.tecnomati.java.controlcaja.cons.Constantes;
import co.tecnomati.java.controlcaja.dominio.Categoriacomprobante;
import co.tecnomati.java.controlcaja.dominio.Comprobante;
import co.tecnomati.java.controlcaja.dominio.Tipocomprobante;
import co.tecnomati.java.controlcaja.dominio.dao.imp.CategoriaComprobanteDaoImp;
import co.tecnomati.java.controlcaja.dominio.dao.imp.TipoComprobanteDaoImp;
import co.tecnomati.java.controlcaja.modelo.ModeloAsociado;
import co.tecnomati.java.controlcaja.modelo.ModeloComprobante;
import co.tecnomati.java.controlcaja.util.ComprobanteUtil;
import co.tecnomati.java.controlcaja.util.MyUtil;
import co.tecnomati.java.controlcaja.util.TablaUtil;
import com.toedter.calendar.JDateChooser;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author joel
 */
public class GUIGestorComprobante extends javax.swing.JDialog {

    int numeroSeleccion;
    Comprobante comprobante;
    ModeloComprobante modeloComprobante;
    boolean agregado = false;
    private TableRowSorter sorter;
boolean bandera; 
    private boolean banderaCategoria;


//boolean controlPrimerWhere = true;


    public boolean isAgregado() {
        return agregado;
    }

    public void setAgregado(boolean agregado) {
        this.agregado = agregado;
    }

    public void inicializarTabla() {
        modeloComprobante = new ModeloComprobante();
        sorter = new TableRowSorter(modeloComprobante);
        tblComprobante.setModel(modeloComprobante);
        TablaUtil.ocultarIdTabla(tblComprobante);
    }

    /**
     * Creates new form GUIGestorComprobante
     */
    public GUIGestorComprobante(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        bandera = false; 
        setDatosCategoriaComprobante();
        setDatosCmbTipocomprobantexCategoria(cmbCategoria.getSelectedItem().toString());
        inicializarTabla();
        bandera= true;
        dateDesde.setDate(new Date());
        dateHasta.setDate(new Date());
        this.setTitle("Busqueda");
//         txtFNumSerie2.setFocusLostBehavior(JFormattedTextField.PERSIST);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    
    /**
     * Carga el cmb categoria con los datos de categoria
     */
    public void setDatosCategoriaComprobante() {
        cmbCategoria.removeAllItems();

        if (new CategoriaComprobanteDaoImp().listarCategoriaComprobante().isEmpty()) {
            cmbCategoria.setEditable(false);
        } else {
            cmbCategoria.addItem("Seleccione");
            for (Categoriacomprobante o : new CategoriaComprobanteDaoImp().listarCategoriaComprobante()) {

                cmbCategoria.addItem(o.getDescripcion());
            }
            AutoCompleteDecorator.decorate(this.cmbCategoria);
            cmbCategoria.setEditable(true);

        }
    }


   /**
    *  Setea una lista en el combobox tipo de comprobante de acuerdo a la categoria recibida como parametro 
    * @param categoria recibida
    */
    public void setDatosCmbTipocomprobantexCategoria(String categoria) {
        cmbTipoComprobante.removeAllItems();
         cmbTipoComprobante.addItem("Seleccione");
         
         
        if (new TipoComprobanteDaoImp().listarTipoComprobantexCategoria(categoria).isEmpty()) {
             // si la lista de tipodecomprobante por categoria esta vacia
            cmbTipoComprobante.setEditable(false);
//          cmbTipoComprobante.setEnabled(false);
        } else {
           
            for (Tipocomprobante o : new TipoComprobanteDaoImp().listarTipoComprobantexCategoria(cmbCategoria.getSelectedItem().toString())) {

                cmbTipoComprobante.addItem(o.getFormulario());
            }
            AutoCompleteDecorator.decorate(this.cmbTipoComprobante);
            cmbTipoComprobante.setEditable(true);
//          cmbTipoComprobante.setEnabled(true);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel1 = new org.edisoncor.gui.panel.Panel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblComprobante = new javax.swing.JTable();
        btnCancelar = new org.edisoncor.gui.button.ButtonIpod();
        btnNuevo = new org.edisoncor.gui.button.ButtonIpod();
        btnEditar = new org.edisoncor.gui.button.ButtonIpod();
        labelMetric3 = new org.edisoncor.gui.label.LabelMetric();
        jPanel1 = new javax.swing.JPanel();
        cmbOperacion = new javax.swing.JComboBox();
        labelMetric5 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric6 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric2 = new org.edisoncor.gui.label.LabelMetric();
        dateDesde = new com.toedter.calendar.JDateChooser();
        labelMetric1 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric4 = new org.edisoncor.gui.label.LabelMetric();
        dateHasta = new com.toedter.calendar.JDateChooser();
        cmbCategoria = new javax.swing.JComboBox();
        labelMetric7 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric8 = new org.edisoncor.gui.label.LabelMetric();
        cmbEstado = new javax.swing.JComboBox();
        btnFiltroBusquedaComprobante = new javax.swing.JButton();
        cmbTipoComprobante = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFont(new java.awt.Font("Agency FB", 0, 12)); // NOI18N
        setResizable(false);

        panel1.setColorPrimario(new java.awt.Color(0, 0, 0));

        tblComprobante.setBackground(new java.awt.Color(204, 204, 204));
        tblComprobante.setBorder(new javax.swing.border.MatteBorder(null));
        tblComprobante.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblComprobante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NUM SERIE", "FECHA", "ENTIDAD", "COMPROBANTE", "DETALLE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblComprobante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComprobanteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblComprobante);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/tecnomati/java/controlcaja/imagen/Atras.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/tecnomati/java/controlcaja/imagen/document_64.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/tecnomati/java/controlcaja/imagen/pencil_48.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        labelMetric3.setText("FILTRAR POR");
        labelMetric3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 102, 102)));

        cmbOperacion.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        cmbOperacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "ENTRADA", "SALIDA" }));
        cmbOperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOperacionActionPerformed(evt);
            }
        });

        labelMetric5.setText("Por Periodo");
        labelMetric5.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        labelMetric6.setText("Hasta");
        labelMetric6.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        labelMetric2.setText("Por Operacion");
        labelMetric2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        dateDesde.setMaxSelectableDate(new Date());

        labelMetric1.setText("Por Categoria");
        labelMetric1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        labelMetric4.setText("Por Tipo de Comprobante");
        labelMetric4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        dateHasta.setMaxSelectableDate(new Date());

        cmbCategoria.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        cmbCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCategoriaItemStateChanged(evt);
            }
        });
        cmbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriaActionPerformed(evt);
            }
        });
        cmbCategoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbCategoriaFocusLost(evt);
            }
        });

        labelMetric7.setText("Desde");
        labelMetric7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        labelMetric8.setText("Por Estado");
        labelMetric8.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        cmbEstado.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "ACTIVO", "ANULADO" }));
        cmbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstadoActionPerformed(evt);
            }
        });

        btnFiltroBusquedaComprobante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/tecnomati/java/controlcaja/imagen/search_32.png"))); // NOI18N
        btnFiltroBusquedaComprobante.setText("Filtro");
        btnFiltroBusquedaComprobante.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFiltroBusquedaComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroBusquedaComprobanteActionPerformed(evt);
            }
        });

        cmbTipoComprobante.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        cmbTipoComprobante.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        cmbTipoComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoComprobanteActionPerformed(evt);
            }
        });
        cmbTipoComprobante.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTipoComprobanteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbTipoComprobanteFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelMetric1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMetric2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(labelMetric5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelMetric7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMetric6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbOperacion, 0, 249, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(labelMetric8, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(btnFiltroBusquedaComprobante)
                        .addGap(153, 153, 153))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMetric8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnFiltroBusquedaComprobante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelMetric5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelMetric7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMetric6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(329, 329, 329)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelMetric3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1184, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMetric3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblComprobanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComprobanteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblComprobanteMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        GUIComprobante nuevoComprobante = new GUIComprobante(null, true);
        if (nuevoComprobante.isAgregado()) {
            inicializarTabla();
        }

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if (tblComprobante.getSelectedRow() != -1) {
            numeroSeleccion = sorter.convertRowIndexToModel(tblComprobante.getSelectedRow());
            comprobante = modeloComprobante.getAsociado(numeroSeleccion);
            // abrir el formulario alta de persona para editar los datos de persona
            GUIComprobante modificarComprobante = new GUIComprobante(null, true, comprobante);
            // actulizar la tabla con los datos modificados
            if (modificarComprobante.isAgregado() || modificarComprobante.isElimiado()) {
                inicializarTabla();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    public void filtro(JTextField caja) {
        if (tblComprobante.getModel().getRowCount() != 0) {
            sorter.setRowFilter(RowFilter.regexFilter("(?i).*" + caja.getText() + ".*"));
            tblComprobante.setRowSorter(sorter);
        }
    }
    private void btnFiltroBusquedaComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroBusquedaComprobanteActionPerformed
        if(bandera){
        inicializarTablaxFiltro();   
       }
    }//GEN-LAST:event_btnFiltroBusquedaComprobanteActionPerformed

    private void cmbOperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOperacionActionPerformed
      
//        inicializarTablaxFiltro();   
          }//GEN-LAST:event_cmbOperacionActionPerformed

    private void cmbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstadoActionPerformed
        
//        inicializarTablaxFiltro();   
      
    }//GEN-LAST:event_cmbEstadoActionPerformed

    private void cmbTipoComprobanteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTipoComprobanteFocusGained
//        System.out.println("CmbtipoCompro Focus Gained"+ cmbCategoria.getSelectedItem().toString());
//        setDatosCmbTipocomprobantexCategoria(cmbCategoria.getSelectedItem().toString());
    }//GEN-LAST:event_cmbTipoComprobanteFocusGained

    private void cmbTipoComprobanteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTipoComprobanteFocusLost
//           if (!cmbCategoria.getSelectedItem().toString().equals(Constantes.SELECCIONE)) {
//                
////                setDatosCmbTipocomprobantexCategoria(cmbCategoria.getSelectedItem().toString());
//        System.err.println("cmbTipoComprobanteFocusLost");         
//        inicializarTablaxFiltro();
//                 
//            }
    }//GEN-LAST:event_cmbTipoComprobanteFocusLost

    private void cmbCategoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbCategoriaFocusLost
//        System.out.println("focus lost d categoria");
//        cmbTipoComprobante.removeAll();
//        cmbTipoComprobante.addItem("Seleccione");
    }//GEN-LAST:event_cmbCategoriaFocusLost

    private void cmbTipoComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoComprobanteActionPerformed
       
//        System.out.println("cmbtipocomprobante acccion");
//        inicializarTablaxFiltro();
    }//GEN-LAST:event_cmbTipoComprobanteActionPerformed

    private void cmbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriaActionPerformed
     
    }//GEN-LAST:event_cmbCategoriaActionPerformed

    private void cmbCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCategoriaItemStateChanged
        if (bandera) {
                    setDatosCmbTipocomprobantexCategoria(cmbCategoria.getSelectedItem().toString());

        }
    }//GEN-LAST:event_cmbCategoriaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIGestorComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIGestorComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIGestorComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIGestorComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUIGestorComprobante dialog = new GUIGestorComprobante(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIpod btnCancelar;
    private org.edisoncor.gui.button.ButtonIpod btnEditar;
    private javax.swing.JButton btnFiltroBusquedaComprobante;
    private org.edisoncor.gui.button.ButtonIpod btnNuevo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JComboBox cmbEstado;
    private javax.swing.JComboBox cmbOperacion;
    private javax.swing.JComboBox cmbTipoComprobante;
    private com.toedter.calendar.JDateChooser dateDesde;
    private com.toedter.calendar.JDateChooser dateHasta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.edisoncor.gui.label.LabelMetric labelMetric1;
    private org.edisoncor.gui.label.LabelMetric labelMetric2;
    private org.edisoncor.gui.label.LabelMetric labelMetric3;
    private org.edisoncor.gui.label.LabelMetric labelMetric4;
    private org.edisoncor.gui.label.LabelMetric labelMetric5;
    private org.edisoncor.gui.label.LabelMetric labelMetric6;
    private org.edisoncor.gui.label.LabelMetric labelMetric7;
    private org.edisoncor.gui.label.LabelMetric labelMetric8;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JTable tblComprobante;
    // End of variables declaration//GEN-END:variables


    private void inicializarTablaxFecha(Date dateDesde, Date dateHasta) {
        modeloComprobante = new ModeloComprobante(dateDesde, dateHasta);
        sorter = new TableRowSorter(modeloComprobante);
        tblComprobante.setModel(modeloComprobante);
    }

    private void inicializarTablaxFiltro() {
        modeloComprobante = new ModeloComprobante(generarWhere());
        System.out.println(generarWhere());
        sorter = new TableRowSorter(modeloComprobante);
        tblComprobante.setModel(modeloComprobante);
         TablaUtil.ocultarIdTabla(tblComprobante);
    }

    private String generarWhere() {
        String where = "";
        boolean controlPrimerWhere = true;
        if (!cmbCategoria.getSelectedItem().equals(Constantes.SELECCIONE) || !cmbTipoComprobante.getSelectedItem().equals(Constantes.SELECCIONE) || !cmbOperacion.getSelectedItem().equals(Constantes.SELECCIONE) || !cmbEstado.getSelectedItem().equals(Constantes.SELECCIONE)||(dateDesde.getDate()!=null && dateHasta.getDate()!=null)) {
            where = " where ";

            if (!cmbCategoria.getSelectedItem().equals(Constantes.SELECCIONE)) {
                if (controlPrimerWhere) {
                    where = where + getWhereCategoria();
                    controlPrimerWhere = false;
                } else {
                    where = where + " and " + getWhereCategoria();
                }

            }
            if (!cmbTipoComprobante.getSelectedItem().equals(Constantes.SELECCIONE)) {
                if (controlPrimerWhere) {
                    where = where + getWhereTipoComprobante();
                    controlPrimerWhere = false;
                } else {
                    where = where + "and " + getWhereTipoComprobante();
                }

            }
            if (!cmbOperacion.getSelectedItem().equals(Constantes.SELECCIONE)) {
                if (controlPrimerWhere) {
                    where = where + getWhereOperacion();
                    controlPrimerWhere = false;
                } else {
                    where = where + "and " + getWhereOperacion();

                }
            }

            
            if (!cmbEstado.getSelectedItem().equals(Constantes.SELECCIONE)) {
                if (controlPrimerWhere) {
                    where = where + getWhereEstado();
                    controlPrimerWhere =false;
                } else {
                    where = where + "and " + getWhereEstado();

                }
            }
            if (controlPrimerWhere) {
                    where = where + getWhereFecha();
                    controlPrimerWhere =false;
                } else {
                    where = where + "and " + getWhereFecha();

                }
//            if (isCorrectojFormSerie(txtFNumSerie2)) {
//                 if (controlPrimerWhere) {
//                where= where + getWhereNumSerie();
//                controlPrimerWhere=false;
//            }else{
          
//                 where = where + "and " + getWhereNumSerie();
//            }
//            }
           
//            try{
                
//            }catch(Exception e){
//                
//            }

           
//    if (!txtNumeroSerie.getText().isEmpty()) {
//        where = where + "and "+getWhereNumSerie();
//    }


        }
        return where;
    }

    private void setEnabledFechas(boolean b) {
        dateDesde.setEnabled(b);
        dateHasta.setEnabled(b);

    }

    private String getWhereCategoria() {
        return " categoria.descripcion='" + cmbCategoria.getSelectedItem() + "'";
    }

    private String getWhereTipoComprobante() {
        return " tipocomprobante.formulario='" + cmbTipoComprobante.getSelectedItem() + "'";
    }

    private String getWhereOperacion() {
//        System.out.println(cmbCategoria.getSelectedIndex());
        return " c.tipoProceso='" + cmbOperacion.getSelectedIndex() + "'";

    }

    private String getWhereEstado() {
        String where = "";

        if (cmbEstado.getSelectedItem().equals(Constantes.COMPROBANTE_ESTADO_ACTIVO)) {
            where = where + " c.estado='" + 1 + "'";
        } else {
            where = where + "c.estado='" + 0 + "'";
        }


        return where;

    }
//    private String getWhereNumSerie() {
//       String where ="";
////       String numSerie = comprobante.getTipocomprobante().getReferencia()+ComprobanteUtil.formatearNumSerieIzq(comprobante.getNumeroSerieIzq()) +"-"+ComprobanteUtil.formatearNumSerieDer(comprobante.getNumeroSerieDer());
////       String numSerie = comprobante.getTipocomprobante().getReferencia()+txtFNumeroSerie.getText();
////       System.out.println(numSerie);
//       System.out.println(txtFNumeroSerie.getText());
//       
////        where = where + " c.numeroSerie ='" + numSerie + "'";
//        return where;
//       
//    }

    private String getWhereFecha() {
        String desdeS= MyUtil.getFechaString10AAAAMMDD(dateDesde.getDate());
        String hastaS= MyUtil.getFechaString10AAAAMMDD(dateHasta.getDate());
       return "c.fecha<='" + hastaS + "' and c.fecha>='" + desdeS + "'";
    }
    
    
    private boolean isVaciojFormSerie(JFormattedTextField jf){
        boolean b= false;
        String cadena = jf.getText().replaceAll("[.-]", "");
       
        
        if (cadena.length()==0) {
            b=true;
        } 
        return b;
    }

    private boolean isCorrectojFormSerie(JFormattedTextField jf){
         boolean b= false;
        String cadena = jf.getText().replaceAll("[.-]", "");
        cadena = cadena.replaceAll("[. ]", "");
       if (cadena.length()==12) {
            b=true;
        }      
        
      return b;
    }
//    private String getWhereNumSerie() {
//        int izq = Integer.valueOf(txtFNumSerie2.getText().substring(0,4));
//        int der = Integer.valueOf(txtFNumSerie2.getText().substring(5,13));
//        return "c.numeroSerieIzq='" + izq + "' and c.numeroSerieDer='" + der + "'";
//    }
    
}
